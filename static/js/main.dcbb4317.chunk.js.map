{"version":3,"sources":["components/Header.js","context/Actions.js","context/AppReducer.js","context/GlobalState.js","components/OneTeam.js","components/Team.js","components/SubModal.js","components/AgeBracketModal.js","components/AddTeam.js","App.js","reportWebVitals.js","index.js"],"names":["Header","INSERT_TEAM","DELETE_TEAM","AppReducer","state","action","type","teams","payload","filter","team","id","initialState","name","agebracket","gender","age_range","skills","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTeam","insertTeam","OneTeam","useContext","className","charAt","toUpperCase","slice","map","s","Button","variant","onClick","Team","SubModal","forwardRef","ref","handleParentClose","show","ageRange","selectedCheckboxes","Set","useState","alertShow","setAlertShow","setState","useImperativeHandle","handleShow","prevState","handleClose","ageList","skillsList","changeName","e","target","changeAgeRange","toggleCheckbox","has","delete","add","handleFormSubmit","newTeam","preventDefault","Math","floor","random","Array","from","length","_setAlertShow","bool","setTimeout","adult","Modal","onHide","size","aria-labelledby","centered","closeButton","Title","Body","Form","onSubmit","Row","Col","md","Label","Control","placeholder","onChange","required","Group","Check","inline","label","a","Alert","onClose","dismissible","Heading","Footer","junior","AgeBracketModal","props","modalRef","useRef","setShow","setAgebracket","controlId","as","current","AddTeam","childRef","block","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcbb4317.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return (\n    <center>\n      <h1>🔥 Sports Teams 🔥</h1>\n    </center>\n  );\n};\n","export const INSERT_TEAM = \"INSERT_TEAM\";\nexport const DELETE_TEAM = \"DELETE_TEAM\";\n","import { INSERT_TEAM, DELETE_TEAM } from \"./Actions\";\n\n// App Reducer\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case INSERT_TEAM:\n      return {\n        ...state,\n        teams: [action.payload, ...state.teams],\n      };\n    case DELETE_TEAM:\n      return {\n        ...state,\n        teams: state.teams.filter((team) => team.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default AppReducer;\n","import React, { createContext, useReducer } from \"react\";\nimport { INSERT_TEAM, DELETE_TEAM } from \"./Actions\";\nimport AppReducer from \"./AppReducer\";\n\n// ? Initial State 👍\nconst initialState = {\n  teams: [\n    {\n      id: 1,\n      name: \"India\",\n      agebracket: \"adult\",\n      gender: \"Men\",\n      age_range: 40,\n      skills: [\"A\", \"AA\", \"Masters\"],\n    },\n    {\n      id: 2,\n      name: \"West Indies\",\n      agebracket: \"junior\",\n      age_range: \"13-U\",\n      skills: [\"Gold\", \"Club\", \"High School\"],\n    },\n    {\n      id: 3,\n      name: \"Australia\",\n      agebracket: \"adult\",\n      gender: \"Women\",\n      age_range: 50,\n      skills: [\"A\", \"AAA\", \"Master\"],\n    },\n    {\n      id: 4,\n      name: \"England\",\n      agebracket: \"junior\",\n      age_range: \"15-U\",\n      skills: [\"Sliver\", \"Club\", \"Bronze\"],\n    },\n  ],\n};\n\n// ? Create Context 👍\nexport const GlobalContext = createContext(initialState);\n\n// ? Provider Component 👍\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // ? Actions 👍\n  function deleteTeam(id) {\n    dispatch({\n      type: DELETE_TEAM,\n      payload: id,\n    });\n  }\n\n  function insertTeam(team) {\n    dispatch({\n      type: INSERT_TEAM,\n      payload: team,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        teams: state.teams,\n        deleteTeam,\n        insertTeam,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Button } from \"react-bootstrap\";\n\nexport const OneTeam = ({ team }) => {\n  const { deleteTeam } = useContext(GlobalContext);\n\n  return team.agebracket === \"adult\" ? (\n    <>\n      <li className={team.agebracket}>\n        <span>\n          <h4>{team.name}</h4>\n          Age Bracket:{\" \"}\n          {team.agebracket.charAt(0).toUpperCase() +\n            team.agebracket.slice(1)}{\" \"}\n          <br />\n          Gender: {team.gender}\n        </span>\n        <span className=\"right\">\n          Age: {team.age_range}\n          <br />\n          Skills: {team.skills.map((s) => \"🔸\" + s)}\n        </span>\n        <Button\n          variant=\"danger\"\n          className=\"delete-btn\"\n          onClick={() => deleteTeam(team.id)}\n        >\n          X\n        </Button>\n      </li>\n    </>\n  ) : (\n    <>\n      <li className={team.agebracket}>\n        <span>\n          <h4>{team.name}</h4>\n          Age Bracket:{\" \"}\n          {team.agebracket.charAt(0).toUpperCase() + team.agebracket.slice(1)}\n        </span>\n        <span className=\"right\">\n          Age: {team.age_range}\n          <br />\n          Skills: {team.skills.map((s) => \"🔸\" + s)}\n        </span>\n        <Button\n          variant=\"danger\"\n          className=\"delete-btn\"\n          onClick={() => deleteTeam(team.id)}\n        >\n          X\n        </Button>\n      </li>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { OneTeam } from \"./OneTeam\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Team() {\n  const { teams } = useContext(GlobalContext);\n\n  return (\n    <>\n      <ul id=\"list\" className=\"list\">\n        {teams.map((team) => (\n          <OneTeam key={team.id} team={team} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default Team;\n","import React, {\n  useState,\n  useContext,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Modal, Button, Form, Col, Alert } from \"react-bootstrap\";\n\nexport const SubModal = forwardRef(({ agebracket, handleParentClose }, ref) => {\n  const { insertTeam } = useContext(GlobalContext);\n\n  const initialState = {\n    show: false,\n    name: \"\",\n    gender: \"\",\n    ageRange: \"\",\n    selectedCheckboxes: new Set(),\n  };\n  const [alertShow, setAlertShow] = useState(false);\n  const [\n    { show, name, gender, ageRange, selectedCheckboxes },\n    setState,\n  ] = useState(initialState);\n\n  useImperativeHandle(ref, () => ({\n    handleShow() {\n      setState((prevState) => ({ ...prevState, show: true }));\n    },\n  }));\n\n  const handleClose = () => {\n    setState({ ...initialState });\n  };\n\n  let ageList = [],\n    skillsList = [];\n  if (agebracket === \"adult\") {\n    ageList = [\"26-U\", \"40\", \"50\", \"60\", \"70\"];\n    skillsList = [\"A\", \"AA\", \"AAA\", \"Novice\", \"Masters\"];\n  } else {\n    ageList = [\"13-U\", \"14-U\", \"15-U\", \"16-U\", \"17-U\"];\n    skillsList = [\"Bronze\", \"Silver\", \"Gold\", \"High School\", \"Club\"];\n  }\n\n  const changeName = (e) =>\n    setState((prevState) => ({ ...prevState, name: e.target.value }));\n  const changeGender = (e) =>\n    setState((prevState) => ({ ...prevState, gender: e.target.value }));\n  const changeAgeRange = (e) =>\n    setState((prevState) => ({ ...prevState, ageRange: e.target.value }));\n\n  const toggleCheckbox = (e) => {\n    const s = selectedCheckboxes;\n    if (s.has(e.target.value)) {\n      s.delete(e.target.value);\n    } else {\n      s.add(e.target.value);\n    }\n    setState((prevState) => ({ ...prevState, selectedCheckboxes: s }));\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    let newTeam;\n    if (agebracket === \"adult\") {\n      newTeam = {\n        id: Math.floor(Math.random() * 100000000),\n        name,\n        agebracket,\n        gender,\n        age_range: ageRange,\n        skills: Array.from(selectedCheckboxes),\n      };\n    } else {\n      newTeam = {\n        id: Math.floor(Math.random() * 100000000),\n        name,\n        agebracket,\n        age_range: ageRange,\n        skills: Array.from(selectedCheckboxes),\n      };\n    }\n    if (newTeam.skills.length === 0) {\n      _setAlertShow(true);\n      return;\n    }\n    insertTeam(newTeam);\n    handleParentClose();\n    handleClose();\n  };\n  const _setAlertShow = (bool) => {\n    if (bool) {\n      setAlertShow(true);\n      setTimeout(() => {\n        setAlertShow(false);\n      }, 5000);\n    } else {\n      setAlertShow(false);\n    }\n  };\n\n  const adult = (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      size=\"xl\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Adult Sport Team</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <center>\n          <h2>What specific details are needed for this divison?</h2>\n          <p>Make a selection based on the options given below!</p>\n        </center>\n        <hr />\n        <Form onSubmit={handleFormSubmit}>\n          <Form.Row>\n            <Col md={2}>\n              <Form.Label>Name: </Form.Label>\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Team Name\"\n                onChange={changeName}\n                required\n              />\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col md={2}>\n              <Form.Label>Gender: </Form.Label>\n            </Col>\n            <Col>\n              <Form.Group onChange={changeGender} value={gender} required>\n                <Form.Check\n                  inline\n                  name=\"gender\"\n                  type=\"radio\"\n                  label=\"Men\"\n                  value=\"men\"\n                  required\n                />\n                <Form.Check\n                  inline\n                  name=\"gender\"\n                  type=\"radio\"\n                  label=\"Women\"\n                  value=\"women\"\n                />\n                <Form.Check\n                  inline\n                  name=\"gender\"\n                  type=\"radio\"\n                  label=\"Coed\"\n                  value=\"coed\"\n                />\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col md={2}>\n              <Form.Label>Age Range: </Form.Label>\n            </Col>\n            <Col>\n              <Form.Group onChange={changeAgeRange} value={ageRange}>\n                {ageList.map((a) => (\n                  <Form.Check\n                    inline\n                    name=\"agerange\"\n                    type=\"radio\"\n                    label={a}\n                    value={a}\n                    key={a}\n                    required\n                  />\n                ))}\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col md={2}>\n              <Form.Label>Skills: </Form.Label>\n            </Col>\n            <Col>\n              <Form.Group>\n                {skillsList.map((s, key = s) => (\n                  <Form.Check\n                    inline\n                    name=\"skill\"\n                    type=\"checkbox\"\n                    label={s}\n                    value={s}\n                    onChange={toggleCheckbox}\n                    key={s}\n                  />\n                ))}\n              </Form.Group>\n            </Col>\n            <br />\n          </Form.Row>\n          <Alert\n            show={alertShow}\n            variant=\"danger\"\n            onClose={() => _setAlertShow(false)}\n            dismissible\n          >\n            <Alert.Heading>Required Field - Skills</Alert.Heading>\n            <p>Please choose atleast one skill!</p>\n          </Alert>\n          <Modal.Footer>\n            <Button variant=\"info\" onClick={handleClose}>\n              Back\n            </Button>\n            <Button variant=\"warning\" type=\"submit\">\n              Next\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n\n  const junior = (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      size=\"xl\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Junior Sport Team</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <center>\n          <h2>What specific details are needed for this divison?</h2>\n          <p>Make a selection based on the options given below!</p>\n        </center>\n        <hr />\n        <Form onSubmit={handleFormSubmit}>\n          <Form.Row>\n            <Col md={2}>\n              <Form.Label>Name: </Form.Label>\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Team Name\"\n                onChange={changeName}\n                required\n              />\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col md={2}>\n              <Form.Label>Age Range: </Form.Label>\n            </Col>\n            <Col>\n              <Form.Group onChange={changeAgeRange} value={ageRange} required>\n                {ageList.map((a, key = a) => (\n                  <Form.Check\n                    inline\n                    name=\"agerange\"\n                    type=\"radio\"\n                    label={a}\n                    value={a}\n                    key={a}\n                    required\n                  />\n                ))}\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col md={2}>\n              <Form.Label>Skills: </Form.Label>\n            </Col>\n            <Col>\n              <Form.Group>\n                {skillsList.map((s, key = s) => (\n                  <Form.Check\n                    inline\n                    name=\"skill\"\n                    type=\"checkbox\"\n                    label={s}\n                    value={s}\n                    onChange={toggleCheckbox}\n                    key={s}\n                  />\n                ))}\n              </Form.Group>\n            </Col>\n            <br />\n          </Form.Row>\n          <Alert\n            show={alertShow}\n            variant=\"danger\"\n            onClose={() => _setAlertShow(false)}\n            dismissible\n          >\n            <Alert.Heading>Required Field - Skills</Alert.Heading>\n            <p>Please choose atleast one skill!</p>\n          </Alert>\n          <Modal.Footer>\n            <Button variant=\"info\" onClick={handleClose}>\n              Back\n            </Button>\n            <Button variant=\"warning\" type=\"submit\">\n              Next\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n\n  return agebracket === \"adult\" ? adult : junior;\n});\n","import React, {\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from \"react\";\nimport { SubModal } from \"./SubModal\";\n\nimport { Modal, Button, Form, Alert } from \"react-bootstrap\";\n\nexport const AgeBracketModal = forwardRef((props, ref) => {\n  const modalRef = useRef();\n\n  const [show, setShow] = useState(false);\n  const [alertShow, setAlertShow] = useState(false);\n  const [agebracket, setAgebracket] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    handleShow() {\n      setShow(true);\n    },\n  }));\n\n  const handleClose = () => {\n    setShow(false);\n    setAgebracket(\"\");\n  };\n  const handleNext = () => {\n    if (agebracket === \"adult\" || agebracket === \"junior\") {\n      modalRef.current.handleShow();\n    } else {\n      _setAlertShow(true);\n    }\n  };\n\n  const _setAlertShow = (bool) => {\n    if (bool) {\n      setAlertShow(true);\n      setTimeout(() => {\n        setAlertShow(false);\n      }, 5000);\n    } else {\n      setAlertShow(false);\n    }\n  };\n\n  const changeAgeBracket = (e) => setAgebracket(e.target.value);\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Sport Team</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <center>\n            <h2>What type of age bracket is needed?</h2>\n            <p>Make a selection based on the desired age group!</p>\n          </center>\n          <hr />\n          <Form>\n            <Form.Group controlId=\"agebracket\">\n              <Form.Control\n                as=\"select\"\n                onChange={changeAgeBracket}\n                value={agebracket}\n                required\n              >\n                <option value={null}>Choose Age Bracket</option>\n                <option value=\"adult\">Adult</option>\n                <option value=\"junior\">Junior</option>\n              </Form.Control>\n              <br />\n              <Alert\n                show={alertShow}\n                variant=\"danger\"\n                onClose={() => _setAlertShow(false)}\n                dismissible\n              >\n                <Alert.Heading>Required Field</Alert.Heading>\n                <p>Please choose a valid option!</p>\n              </Alert>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"info\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"warning\" onClick={handleNext}>\n            Next\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <SubModal\n        ref={modalRef}\n        agebracket={agebracket}\n        handleParentClose={handleClose}\n      />\n    </>\n  );\n});\n","import React, { useRef } from \"react\";\nimport { AgeBracketModal } from \"./AgeBracketModal\";\n\nimport { Button } from \"react-bootstrap\";\n\nfunction AddTeam() {\n  const childRef = useRef();\n  return (\n    <>\n      <Button\n        variant=\"warning\"\n        size=\"lg\"\n        block\n        onClick={() => childRef.current.handleShow()}\n      >\n        Add a new team!\n      </Button>\n\n      <AgeBracketModal ref={childRef} />\n    </>\n  );\n}\n\nexport default AddTeam;\n","import { Header } from \"./components/Header\";\r\nimport Team from \"./components/Team\";\r\nimport AddTeam from \"./components/AddTeam\";\r\n\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <div className=\"container\">\r\n        <Header /> <hr />\r\n        <AddTeam /> <hr />\r\n        <Team />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}